# -*- coding: utf-8 -*-
"""PythonLabcycle1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KMQnP4QEwcj58BD5qI1pDG8_xsXlvXRo

# ***M.Sc(Five year integrated) in Computer Science***
# (Artificial Intelligence & Data Science)
# Semester 1
# Python Programming Lab
# ***LAB CYCLE 1***

1.Develop a program to read a four digit number and find its:

a.Sum of digits 

b.Reverse

c.Difference between the product of digits at the odd position and the product of digits at the even postion.
"""

n = int(input("Enter a four digit number: "))
digit4 = n%10
n = n//10
digit3 = n%10
n = n//10
digit2 = n%10
n = n//10
digit1 = n%10
n = n//10 
sum = digit4+digit3+digit2+digit1
reverse = (digit4*1000)+(digit3*100)+(digit2*10)+digit1
difference = (digit1*digit3)-(digit2*digit4)
print("sum: ",sum)
print("Reverse is : ",reverse)
print("Difference is : ",difference)

"""2.Develop a program to read the three sides of two triangles and 
calculate the area of both. Define a function to read the three sides
and call it. Also, define a function to calculate the area. Print the total 
area enclosed by both triangles and each triangle's contribution (%)
towards it.
"""

def side():
  p = int(input("Enter first side of  triangle: "))
  q = int(input("Enter second side of  triangle : "))
  r = int(input("Enter third side of  triangle : "))
  return p,q,r  
def area():
  p,q,r = side()
  print("Sides of triangle : ",p,q,r)
  s =(p+q+r)*0.5
  A= (s*(s-p)*(s-q)*(s-r))**0.5
  print("AREA OF TRIANGLE : ",A)
  return A
def  contribution():
 a1 =area()
 a2 =area()
 c1 =(a1/(a1+a2)*100)
 c2 =(a2/(a1+a2)*100)
 print("Contribution of first triangle : ",c1)
 print("Contribution of second triangle : ",c2)
contribution()

"""3.Develop a program to read the employee's name, code, and basic pay
and calculate the gross salary, deduction, and net salary according to
the following conditions. Define a function to find each of the 
components. Finally, generate a payslip.
"""

def Employdetails():
  name = str(input("Enter name of employee : "))
  code = int (input("Enter code of employee : "))
  basicpay = int(input("Enter basicpay of the employee"))
  
  
  
  print('------------------------PAYMENT SLIP-------------------------')
  print("Name of the employee : ",name)
  print("Code of the employee : ",code)  
  print("Basic pay  of the employee : ",basicpay) 
  return name,code,basicpay  
def calc():
  name,code,basicpay=Employdetails()
  if basicpay<10000:
    GrossSalary= (basicpay+(5*2.5)+500)
    Deduction=(20+8+0)
    Netsalary=(GrossSalary-Deduction)
    print('Gross salary=',GrossSalary)
    print('Deduction=',Deduction)
    print('Net Salary=',NetSalary)
  elif basicpay>10000 and basicpay<30000:
    GrossSalary= (basicpay+(7.5*5)+2500) 
    Deduction=(60+8+0)
    NetSalary=(GrossSalary-Deduction)
    print('Gross salary=',GrossSalary)
    print('Deduction=',Deduction)
    print('Net Salary=',NetSalary)
  elif basicpay>30000 and basicpay<50000:
    GrossSalary= (basicpay+(11*7.5+5000)) 
    Deduction=(60+11+11)
    NetSalary=(GrossSalary-Deduction)
    print('Gross salary=',GrossSalary)
    print('Deduction=',Deduction)
    print('Net Salary=',NetSalary)
  else :
    GrossSalary= (basicpay+(25*11+7000))
    Deduction=(80+12+20)
    NetSalary=(GrossSalary-Deduction)
    print('Gross salary=',GrossSalary)
    print('Deduction=',Deduction)
    print('Net Salary=',NetSalary)
calc()

"""4.Develop a program to perform the following task:


a. Define a function to check whether a number is happy or not.


b. Define a function to print all happy numbers within a range


c. Define a function to print first N happy numbers


A happy number is a number defined by the following process:


• Starting with any positive integer, replace the number with the 
sum of the squares of its digits.


• Repeat the process until the number equals 1 (where it will 
stay), or it loops endlessly in a cycle which does not include 1.


• Those numbers for which this process ends in 1 are happy.
"""

num = int(input("Enter a number "))
def isHappy(num):
    n = num
    for i in range(100):
        sum = 0
        while n!= 0:
            r = n%10
            sum += r*r
            n = n//10
        n = sum
        if sum == 1:
           return True
    return False
if isHappy(num) == True:
    print("Happy!!!")
else:
    print("Sad!!!")
def happyr():
    l=int(input("\nEnter lower limit of range: "))
    u=int(input("Enter upper limit of range: "))
    print("\nHappy numbers from ",l," to ",u," are: ")
    for i in range(l,u+1):
        if isHappy(i)==True:
           print(i)
happyr()

def happylist():
    p = int(input("\nEnter how many happy numbers do you want to print: "))
    print("First ",p," natural happy numbers are: ")
    i=0
    while p != 0:
        i += 1
        if isHappy(i) == True:
            p -= 1
            print(i)
happylist()

"""5.Develop a program to read a string and perform the following 
operations:


• Print all possible substring 


• Print all possible substrings of length K


• Print all possible substrings of length K with N distinct 
characters


• Print all palindrome substrings
"""

def subString(a):
  for i in range(0,len(a)+1):
    for j in range(i+1,len(a)+1):
      s = a[i:j]
      print(s,end=" , ")
def substringk(a,size):
  for i in range(0,len(a)+1):
    for j in range(i+1,len(a)+1):
      s = a[i:j]
      if len(s)==size:
        print(s,end=" , ")
def substringN(a,size,N):
  for i in range(0,len(a)+1):
    for j in range(i+1,len(a)+1):
      s = a[i:j]
      if len(s)==size:
        distinct = set(s)
        if len(distinct) == N:
          print(s,end=" , ")
def substringMax(a,N):
  string_list = []
  for i in range(0,len(a)+1):
    for j in range(i+1,len(a)+1):
      s = a[i:j]
      distinct = set(s)
      if len(distinct) == N:
        string_list.append(s)

  length = len(max(string_list,key = len)) 
  for i in string_list:
    if len(i)==length:
      print(i,end=" , ")
def paliandrome(a):
  for i in range(0,len(a)+1):
    for j in range(i+1,len(a)+1):
      s = a[i:j]
      reverse = s[::-1]
      if reverse == s:
        print(s , end = " , ")


a = input("Enter the string :  ")
print(" Sub Strings are")
subString(a)

length = int(input("\nEnter length of the substring "))
print("\n Sub Strings with length ",length," are")
substringk(a,length) 

num_of_distinct = int(input("\nEnter the no of distinct characters"))
print("\n Sub Strings with length ",length,"and ",num_of_distinct," distinct characters are")
substringN(a,length,num_of_distinct)
print("\nSub Strings with Maximum Length and ",num_of_distinct," characters")
substringMax(a,num_of_distinct)
print("\nThe Paliandrome Strings are ")
paliandrome(a)